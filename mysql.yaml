apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: manual
provisioner: kubernetes.io/gce-pd
parameters:
  type: pd-ssd

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-preload-data-config
  labels:
    name: mysql-data-store
    app: mysql-gke-deployment
  namespace: development
data:
  init.sql: |
    CREATE DATABASE IF NOT EXISTS`book-management-db`;
    USE `book-management-db`;
    DROP TABLE IF EXISTS `books`;
    CREATE TABLE `books`(
     `id`int NOT NULL AUTO_INCREMENT,
     `title`varchar(255) NOT NULL,
     `author`varchar(255) NOT NULL,
     `language`varchar(255) DEFAULT NULL,
     `created_at`datetime DEFAULT CURRENT_TIMESTAMP,
     `created_by`varchar(255) DEFAULT NULL,
     `updated_at`datetime DEFAULT CURRENT_TIMESTAMP,
     `updated_by` varchar(255) DEFAULT NULL,
      PRIMARY KEY (`id`)
    );
    insert into books(`title`,`author`,`language`) values('Harry Potter','J.K.Rowling','English');`

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 20Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi

---

apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  ports:
  - port: 3306
  selector:
    app: mysql

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  labels:
    name: mysql
    app: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
      name: mysql-pod
  strategy:
    type: Recreate
  template:
    metadata:
      name: mysql-pod
      labels:
        name: mysql-pod
        app: mysql
    spec:
      containers:
      - image: mysql:8.4.0
        name: mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: password
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-initdb
          mountPath: /docker-entrypoint-initdb.d
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-initdb
        configMap:
          name: mysql-preload-data-config
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pv-claim
